"use strict";angular.module("crookedFireApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","firebase","angular-loading-bar","crookedFireApp.services","crookedFireApp.filters","crookedFireApp.directives"]),angular.module("crookedFireApp").config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main",roles:[""]}).otherwise({redirectTo:"/"})}]),angular.module("crookedFireApp").config(["$routeProvider",function(a){a.when("/entries",{templateUrl:"views/entries/list.html",controller:"EntriesCtrl",controllerAs:"vm",roles:["user","admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}}).when("/entries/create",{templateUrl:"views/entries/create.html",controller:"EntriesCtrl",controllerAs:"vm",roles:["user","admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}}).when("/entries/:entryId/edit",{templateUrl:"views/entries/edit.html",controller:"EntriesCtrl",controllerAs:"vm",roles:["user","admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}}).when("/entries/:entryId",{templateUrl:"views/entries/single.html",controller:"EntriesCtrl",controllerAs:"vm",roles:["user","admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}})}]),angular.module("crookedFireApp").config(["$routeProvider",function(a){a.when("/calc",{templateUrl:"views/calc/calculator.html",controller:"CalcCtrl",controllerAs:"vm",roles:[""]})}]),angular.module("crookedFireApp").config(["$routeProvider",function(a){a.when("/projector",{templateUrl:"views/projector/projector.html",controller:"ProjectorCtrl",controllerAs:"vm",roles:[""]})}]),angular.module("crookedFireApp").config(["$routeProvider",function(a){a.when("/auth/login",{templateUrl:"views/authentication/login.html",controller:"AuthenticationCtrl",controllerAs:"vm",roles:[""],resolve:{}}).when("/auth/register",{templateUrl:"views/authentication/register.html",controller:"AuthenticationCtrl",controllerAs:"vm",roles:[""],resolve:{}})}]),angular.module("crookedFireApp").config(["$routeProvider",function(a){a.when("/examples",{templateUrl:"views/examples/list.html",controller:"ExamplesCtrl",controllerAs:"vm",roles:["admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}}).when("/examples/create",{templateUrl:"views/examples/create.html",controller:"ExamplesCtrl",controllerAs:"vm",roles:["admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}}).when("/examples/:exampleId/edit",{templateUrl:"views/examples/edit.html",controller:"ExamplesCtrl",controllerAs:"vm",roles:["admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}}).when("/examples/:exampleId",{templateUrl:"views/examples/single.html",controller:"ExamplesCtrl",controllerAs:"vm",roles:["admin"],resolve:{currentAuth:["Auth",function(a){return a.init().$requireAuth()}]}})}]);var firebaseURL="https://scorching-heat-6352.firebaseio.com/";angular.module("crookedFireApp.services",[]).factory("Auth",["$firebaseAuth","$firebaseObject",function(a,b){return{init:function(){var b=new Firebase(firebaseURL);return a(b)},roles:function(){var a=new Firebase(firebaseURL+"roles");return b(a)},rolesById:function(a){var c=new Firebase(firebaseURL+"roles/"+a);return b(c)}}}]).factory("FireFactory",["$firebaseArray","$firebaseObject",function(a,b){var c=function(){this.name="",this.data=[],this.single={}},d={getInstance:function(){return new c}};return c.prototype.init=function(a){return this.name=a,this},c.prototype.getAll=function(){var b=firebaseURL+this.name,c=new Firebase(b);return this.data=a(c),this.data},c.prototype.getOne=function(a){var c=firebaseURL+this.name,d=new Firebase(c),e=d.child(a);return this.single=b(e),this.single},d}]),angular.module("crookedFireApp.directives",[]),angular.module("crookedFireApp.filters",[]).filter("tabsFilter",function(){return function(a,b){for(var c=[],d=0;d<a.length;d++)for(var e=0;e<a[d].roles.length;e++)""===a[d].roles[e]&&(c.push(a[d]),e=a[d].roles.length),b&&b[a[d].roles[e]]&&(c.push(a[d]),e=a[d].roles.length);return c}}),angular.module("crookedFireApp").controller("AuthenticationCtrl",["$rootScope","$location","$routeParams","Auth",function(a,b,c,d){function e(){i.message=null,i.error=null,i.auth.$createUser({email:i.email,password:i.password}).then(function(a){i.message="User created with uid: "+a.uid,i.createRoles(a),i.login()})["catch"](function(a){i.error=a})}function f(a){i.roles[a.uid]={user:!0,admin:!1},i.roles.$save()["catch"](function(a){i.error=a})}function g(){i.message=null,i.error=null,i.auth.$removeUser({email:i.email,password:i.password}).then(function(){i.message="User removed"})["catch"](function(a){i.error=a})}function h(){i.error=null,i.auth.$authWithPassword({email:i.email,password:i.password}).then(function(c){a.roles=d.rolesById(c.uid),b.path("/")})["catch"](function(a){i.error=a})}var i=this;i.auth=d.init(),i.roles=d.roles(),i.createUser=e,i.createRoles=f,i.removeUser=g,i.login=h}]),angular.module("crookedFireApp").controller("MainCtrl",function(){}),angular.module("crookedFireApp").controller("EntriesCtrl",["$scope","$location","$routeParams","FireFactory",function(a,b,c,d){function e(){i.entryId=c.entryId,i.entries.$loaded().then(function(){i.entry=i.entries.$getRecord(i.entryId)})["catch"](function(a){console.log("find one operation failed: ",a)})}function f(){i.entries.$add(i.entry).then(function(a){b.path("entries")})["catch"](function(a){console.log("create operation failed: ",a)})}function g(){i.entries.$save(i.entry).then(function(a){b.path("entries/"+a.key())})["catch"](function(a){console.log("update operation failed: ",a)})}function h(a){i.entries.$remove(a).then(function(a){b.path("entries")})["catch"](function(a){console.log("remove operation failed: ",a)})}var i=this;i.entriesFactory=d.getInstance().init("entries"),this.findEntry=e,this.createEntry=f,this.updateEntry=g,this.removeEntry=h,function(){i.entries=i.entriesFactory.getAll()}()}]),angular.module("crookedFireApp").controller("NavigationCtrl",["$rootScope","$location","$routeParams","Auth",function(a,b,c,d){function e(c){var d=!1;if(c)for(var e=0;e<c.length;e++)if(""==c[e]||a.roles[c[e]]){d=!0;break}d||b.path("/")}function f(a){window.location.href=a}function g(a){for(var b=0;b<h.tabs.length;b++)h.tabs[b].active=h.tabs[b].id===a}var h=this;h.auth=d.init(),h.selectTab=g,h.authorizeUser=e,a.goTo=f,function(){h.tabs=[{id:"home-tab",href:"/#/",roles:[""],active:!1,title:"  HOME",icon_class:"glyphicon-home"},{id:"calc-tab",href:"/#/calc",roles:[""],active:!1,title:"  CALCULATOR",icon_class:"glyphicon-th"},{id:"projector-tab",href:"/#/projector",roles:[""],active:!1,title:"  PROJECTOR",icon_class:"glyphicon-usd"},{id:"entries-tab",href:"/#/entries",roles:["user"],active:!1,title:"  ENTRIES",icon_class:"glyphicon-book"},{id:"examples-tab",href:"/#/examples",roles:["admin"],active:!1,title:"  EXAMPLES",icon_class:"glyphicon-fire"}]}(),h.auth.$onAuth(function(c){c?(a.authData=c,a.roles=d.rolesById(c.uid)):(a.roles=null,a.authData=null,b.path("/"))}),a.$on("$routeChangeError",function(a,c,d,e){"AUTH_REQUIRED"===e&&b.path("/")}),a.$on("$routeChangeStart",function(a,b){h.authorizeUser(b.roles)})}]),angular.module("crookedFireApp").controller("ExamplesCtrl",["$scope","$location","$routeParams","FireFactory",function(a,b,c,d){function e(){h.exampleId=c.exampleId,h.example=h.exampleFactory.getOne(h.exampleId),h.example.$bindTo(a,"vm.example")}function f(){h.examples.$add(h.example).then(function(a){b.path("examples/"+a.key())})["catch"](function(a){console.log("create operation failed: ",a)})}function g(a){a=h.examples.$getRecord(a.$id),h.examples.$remove(a).then(function(a){b.path("examples")})["catch"](function(a){console.log("remove operation failed: ",a)})}var h=this;h.exampleFactory=d.getInstance().init("examples"),this.findExample=e,this.createExample=f,this.removeExample=g,function(){h.examples=h.exampleFactory.getAll()}()}]),angular.module("crookedFireApp").controller("CalcCtrl",["$scope","$timeout","FireFactory",function(a,b,c){var d=this;d.calcFactory=c.getInstance().init("calc"),d.memory=[],d.latest=0,d.operators={ADDITION:"+",SUBTRACTION:"-",MULTIPLICATION:"*",DIVISION:"/",MODULO:"%"},d.operator=d.operators.ADDITION,d.doAddition=function(){var a=5;d.latest=". ",b(function c(){if(0==a){var e,f=parseInt(d.first),g=parseInt(d.second);switch(d.operator){case"+":e=f+g;break;case"-":e=f-g;break;case"*":e=f*g;break;case"/":e=f/g;break;case"%":e=f%g}d.memory.unshift({timestamp:new Date,first:d.first,operator:d.operator,second:d.second,value:e}),d.first=d.second="",d.latest=e}else d.latest+=". ",a--,b(c,300)},300)}}]),angular.module("crookedFireApp").controller("ProjectorCtrl",["$scope","FireFactory",function(a,b){function c(){}function d(){u.startBalance=[],u.expenses=[],u.incomes=[],u.nonRecurring=[],u.initForm()}function e(){var a={active:!0,name:"",amount:"",frequency:1};u.expenses.push(a)}function f(a){u.expenses.splice(a,1)}function g(){var a={active:!0,name:"",amount:"",frequency:1};u.incomes.push(a)}function h(a){u.incomes.splice(a,1)}function i(){var a={active:!0,name:"",amount:"",month:1};u.nonRecurring.push(a)}function j(a){u.nonRecurring.splice(a,1)}function k(){u.incomes.length<1&&u.addIncome(),u.expenses.length<1&&u.addExpense(),u.nonRecurring.length<1&&u.addTransaction()}function l(a){var b=parseFloat(a);return b?b:0}function m(a){return Math.round(a)}function n(a){return a>0?"positive":0>a?"negative":void 0}function o(){for(var a,b=0,c=0;c<u.incomes.length;c++)a=u.convertToNumber(u.incomes[c].amount),null!=a&&u.incomes[c].active&&(b+=a*u.incomes[c].frequency);return b}function p(){for(var a,b=0,c=0;c<u.expenses.length;c++)a=u.convertToNumber(u.expenses[c].amount),0!=a&&u.expenses[c].active&&(b+=a*u.expenses[c].frequency);return b}function q(){var a=u.monthlyIncome(),b=u.monthlyExpense();return a-b}function r(){for(var a=0,b=0,c=0;c<u.nonRecurring.length;c++)b=u.convertToNumber(u.nonRecurring[c].amount),0!=b&&u.nonRecurring[c].active&&(a+=b);return a}function s(){for(var a=[],b=0,c=0,d=0;12>d;d++){b+=u.monthlyNet();for(var e=0;e<u.nonRecurring.length;e++)u.convertToNumber(u.nonRecurring[e].month)==d+1&&(console.log("vm.convertToNumber(vm.nonRecurring[i].month : ",u.convertToNumber(u.nonRecurring[e].month)),console.log("m+1",d+1),c=u.convertToNumber(u.nonRecurring[e].amount),console.log("oneOff",c),0!=c&&u.nonRecurring[e].active&&(b+=c));a[d]=b}return a}function t(a){var b=new Date,c=b.getMonth(),d=b.getFullYear(),e=["January","February","March","April","May","June","July","August","September","October","November","December"],f=c+a;return f>11&&(f-=12,d+=1),e[f]+" "+d}var u=this;u.projectorFactory=b.getInstance().init("projector"),u.startBalance=[],u.expenses=[],u.incomes=[],u.nonRecurring=[],u.frequencyArr=[{name:"Daily",value:30.4166666666667},{name:"Business Daily",value:21.6666666666667},{name:"Weekly",value:4.33333333333333},{name:"Every 2 Weeks",value:2.16666666666667},{name:"Monthly",value:1}],u.saveProjector=c,u.clearProjector=d,u.addExpense=e,u.removeExpense=f,u.addIncome=g,u.removeIncome=h,u.addTransaction=i,u.removeTransaction=j,u.initForm=k,u.convertToNumber=l,u.roundDown=m,u.positiveNegative=n,u.monthlyIncome=o,u.monthlyExpense=p,u.monthlyNet=q,u.tallyTransactions=r,u.monthlyProjection=s,u.getMonthLabel=t,function(){u.initForm()}()}]),angular.module("crookedFireApp").run(["$templateCache",function(a){a.put("views/authentication/login.html",'<section id="login-user"> <div class="container container-fluid"> <div class="row"> <div class="col-xs-6"> <p ng-show="vm.error" class="alert alert-warning"> <strong>{{vm.error.code}}</strong> </p> <form role="form" ng-submit="vm.login()"> <div class="form-group"> <label for="title">Email</label> <input data-ng-model="vm.email" required id="title" type="text" placeholder="someone@example.com" class="form-control"> </div> <div class="form-group"> <label for="content">Password</label> <input data-ng-model="vm.password" required id="content" type="password" placeholder="" class="form-control"> </div> <div class="form-group"> <button id="submit" type="submit" class="btn btn-primary">Login </button> </div> </form> </div> </div> </div> </section>'),a.put("views/authentication/register.html",'<section id="register-user"> <div class="container container-fluid"> <div class="row"> <div class="col-xs-6"> <p ng-show="vm.error" class="alert alert-warning"> <!--TODO: construct list of error codes and write a service to pretty print these errors--> <strong>{{vm.error.code}}</strong> </p> <form role="form" ng-submit="vm.createUser()"> <div class="form-group"> <label for="title">Email</label> <input data-ng-model="vm.email" required id="title" type="text" placeholder="someone@example.com" class="form-control"> </div> <div class="form-group"> <label for="content">Password</label> <input data-ng-model="vm.password" required id="content" type="password" placeholder="" class="form-control"> </div> <div class="form-group"> <button id="submit" type="submit" class="btn btn-primary">Register </button> <button id="reset" type="reset" class="btn btn-default">Reset </button> </div> </form> </div> </div> </div> </section>'),a.put("views/calc/calculator.html",'<section id="calculator"> <div class="container container-fluid"> <div> <h3>Super Calculator</h3> <form class="form-inline"> <input ng-model="vm.first" type="text" class="input-small"> <select ng-model="vm.operator" class="span1" ng-options="_value_ for (_key_, _value_) in vm.operators"> </select> <input ng-model="vm.second" type="text" class="input-small"> <button ng-click="vm.doAddition()" id="gobutton" class="btn">Go!</button> <h2>{{vm.latest}}</h2> </form> </div> <h4>History</h4> <table class="table"> <thead><tr> <th>Time</th> <th>Expression</th> <th>Result</th> </tr></thead> <tr ng-repeat="result in vm.memory"> <td> {{result.timestamp | date:\'mediumTime\'}} </td> <td> <span>{{result.first}}</span> <span>{{result.operator}}</span> <span>{{result.second}}</span> </td> <td>{{result.value}}</td> </tr> </table> </div> </section>'),a.put("views/entries/create.html",'<section id="create-entry" ng-init="vm.initEntries()"> <form role="form" ng-submit="vm.createEntry()"> <div class="form-group"> <label for="title">Entry Title</label> <input data-ng-model="vm.entry.title" required id="title" type="text" placeholder="Entry Title" class="form-control"> </div> <div class="form-group"> <label for="content">Entry Content</label> <input data-ng-model="vm.entry.content" required id="content" type="text" placeholder="Entry Content" class="form-control"> </div> <div class="form-group"> <button id="submit" type="submit" class="btn btn-primary">Create</button> <button id="reset" type="reset" class="btn btn-default">Reset</button> </div> </form> </section>'),a.put("views/entries/edit.html",'<section id="edit-entry" ng-init="vm.findEntry()"> <form role="form" ng-submit="vm.updateEntry()"> <div class="form-group"> <label for="title">Entry Title</label> <input data-ng-model="vm.entry.title" required id="title" type="text" placeholder="Entry Title" class="form-control"> </div> <div class="form-group"> <label for="content">Entry Content</label> <input data-ng-model="vm.entry.content" required id="content" type="text" placeholder="Entry Content" class="form-control"> </div> <div class="form-group"> <button id="submit" type="submit" class="btn btn-primary">Save</button> <button id="reset" type="reset" class="btn btn-default">Reset</button> </div> </form> </section>'),a.put("views/entries/list.html",'<section id="entry-list" ng-init="vm.initEntries()"> <div class="container container-fluid"> <div class="row"> <div class="col-xs-12"> <a ng-href="/#/entries/create" class="btn btn-primary">Add Entry</a> </div> </div> <br> <div class="row"> <div class="col-xs-12"> <div class="table-responsive"> <table ng-class="{in:vm.entries.length}" class="table table-bordered table-hover"> <tr data-ng-repeat="entry in vm.entries">  <td>{{entry.title}}<br> <small> <a id="edit-entry" href="/#/entries/{{entry.$id}}/edit">Edit</a> / <a id="view-entry&quot;" href="/#/entries/{{entry.$id}}">View</a></small> </td> <td>{{entry.content}}</td> </tr> </table> </div> </div> </div> </div> </section>'),a.put("views/entries/single.html",'<section id="single-entry" ng-init="vm.findEntry()"> <div class="table-responsive"> <table class="table table-hover table-bordered"> <tbody> <tr> <th>Title</th> <td> {{vm.entry.title}} </td> </tr> <tr> <th>Content</th> <td> {{vm.entry.content}} </td> </tr> <tr> <td><a id="edit-entry" class="btn" href="/#/entries/{{vm.entryId}}/edit">EDIT <i class="glyphicon glyphicon-edit"></i></a></td> <td><a id="remove-entry" class="btn" ng-click="vm.removeEntry(vm.entry)">REMOVE <i class="glyphicon glyphicon-remove"></i></a></td> </tr> </tbody> </table> </div> </section>'),a.put("views/examples/create.html",'<section id="create-Example" ng-init="vm.initExamples()"> <form role="form" ng-submit="vm.createExample()"> <div class="form-group"> <label for="title">Example Title</label> <input data-ng-model="vm.example.title" required id="title" type="text" placeholder="Example Title" class="form-control"> </div> <div class="form-group"> <label for="content">Example Content</label> <input data-ng-model="vm.example.content" required id="content" type="text" placeholder="Example Content" class="form-control"> </div> <div class="form-group"> <button id="submit" type="submit" class="btn btn-primary">Create</button> <button id="reset" type="reset" class="btn btn-default">Reset</button> </div> </form> </section>'),a.put("views/examples/edit.html",'<section id="edit-example" ng-init="vm.findExample()"> <form role="form" ng-submit="goTo(\'/#/examples\')"> <div class="form-group"> <label for="title">Example Title</label> <input data-ng-model="vm.example.title" required id="title" type="text" placeholder="Example Title" class="form-control"> </div> <div class="form-group"> <label for="content">Example Content</label> <input data-ng-model="vm.example.content" required id="content" type="text" placeholder="Example Content" class="form-control"> </div> <div class="form-group"> <button id="submit" type="submit" class="btn btn-primary">Return to Examples</button> </div> </form> </section>'),a.put("views/examples/list.html",'<section id="example-list" ng-init="vm.initExamples()"> <div class="container container-fluid"> <div class="row"> <div class="col-xs-12"> <a ng-href="/#/examples/create" class="btn btn-primary">Add Entry</a> </div> </div> <br> <div class="row"> <div class="col-xs-12"> <div class="table-responsive"> <table ng-class="{in:vm.examples.length}" class="table table-bordered table-hover"> <tr data-ng-repeat="example in vm.examples">  <td>{{example.title}}<br> <small> <a id="edit-example" href="/#/examples/{{example.$id}}/edit">Edit</a> / <a id="view-example&quot;" href="/#/examples/{{example.$id}}">View</a></small> </td> <td>{{example.content}}</td> </tr> </table> </div> </div> </div> </div> </section>'),a.put("views/examples/single.html",'<section id="single-example" ng-init="vm.findExample()"> <div class="table-responsive"> <table class="table table-hover table-bordered"> <tbody> <tr> <th>Title</th> <td> {{vm.example.title}} </td> </tr> <tr> <th>Content</th> <td> {{vm.example.content}} </td> </tr> <tr> <td><a id="edit-example" class="btn" href="/#/examples/{{vm.exampleId}}/edit">EDIT <i class="glyphicon glyphicon-edit"></i></a></td> <td><a id="remove-example" class="btn" ng-click="vm.removeExample(vm.example)">REMOVE <i class="glyphicon glyphicon-remove"></i></a></td> </tr> </tbody> </table> </div> </section>'),a.put("views/main.html",'<section id="main"> <h1>Welcome to <strong>Crooked Firebase Demo App</strong></h1> </section>'),a.put("views/navigation/navigation.html",'<div class="navbar navbar-default" role="navigation" data-ng-controller="NavigationCtrl as vm"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#js-navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#/"><strong>Crooked Firebase App</strong></a> </div> <div class="collapse navbar-collapse" id="js-navbar-collapse"> <ul class="nav navbar-nav"> <!--add roles filter once users are set up--> <li ng-class="{active:tab.active}" ng-repeat="tab in vm.tabs | tabsFilter: roles"> <a href="{{tab.href}}" ng-click="vm.selectTab(tab.id)" id="{{tab.id}}"> <span class="glyphicon {{tab.icon_class}}" aria-hidden="true"></span> {{tab.title}} </a> </li> </ul> <ul ng-show="authData" class="nav navbar-nav pull-right"> <li> <a href ng-click="vm.auth.$unauth()"><span class="glyphicon glyphicon-log-out"></span> LOGOUT</a> </li> </ul> <ul ng-hide="authData" class="nav navbar-nav pull-right"> <li> <a href="/#/auth/login" id="login"><span class="glyphicon glyphicon-log-in" aria-hidden="true"></span> LOGIN</a> </li> <li> <a href="/#/auth/register" id="register"><span class="glyphicon glyphicon-user" aria-hidden="true"></span> REGISTER</a> </li> </ul> </div> </div> </div>'),a.put("views/projector/projector.html",'<section id="projector"> <div class="container container-fluid"> <div class="row"> <div class="span12"> <p class="text-center">A <strong>real time</strong> personal finance balance projector.</p> </div> </div> </div> <div class="container container-fluid"> <div class="row"> <div class="col-xs-12 col-sm-12 col-md-7 col-lg-7"> <div class="box"> <h4>How much money do you have today?</h4> <input type="text" ng-model="vm.startBalance" placeholder="Enter your current balance"> </div> <div class="box"> <h4>What is your regular income?</h4> <ul class="list-unstyled"> <li ng-repeat="income in vm.incomes" class="active-{{income.active}}"> <span><input type="checkbox" ng-model="income.active"></span> <input type="text" ng-model="income.name" placeholder="What is it? e.g. Salary..." class="span3"> <input type="text" ng-model="income.amount" placeholder="Enter Amount" class="span1"> <select class="span2" ng-model="income.frequency" ng-options="frequency.value as frequency.name for frequency in vm.frequencyArr"> <!-- <option value="30.4166666666667">daily</option>\n                <option value="21.6666666666667">work days</option>\n                <option value="4.33333333333333">weekly</option>\n                <option value="2.16666666666667">every 2 weeks</option>\n                <option value="1">monthly</option> --> </select> <button class="btn btn-indented" ng-click="vm.removeIncome($index);"><span class="glyphicon glyphicon-minus" aria-hidden="true"></span></button> </li> </ul> <button class="btn btn-indented" ng-click="vm.addIncome();"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add</button> </div> <div class="box"> <h4>What are your regular expenses?</h4> <ul class="list-unstyled"> <li ng-repeat="expense in vm.expenses" class="active-{{expense.active}}"> <span><input type="checkbox" ng-model="expense.active"></span> <input type="text" ng-model="expense.name" placeholder="e.g. Rent..." class="span3"> <input type="text" ng-model="expense.amount" placeholder="Enter Amount" class="span1"> <select class="span2" ng-model="expense.frequency" ng-options="frequency.value as frequency.name for frequency in vm.frequencyArr"> <!-- <option value=30.4166666666667>Daily</option>\n                <option value=21.6666666666667>Business Daily</option>\n                <option value=4.33333333333333>Weekly</option>\n                <option value=2.16666666666667>Every 2 Weeks</option>\n                <option value=1>Monthly</option> --> </select> <button class="btn btn-indented" ng-click="vm.removeExpense($index);"><span class="glyphicon glyphicon-minus" aria-hidden="true"></span></button> </li> </ul> <button class="btn btn-indented" ng-click="vm.addExpense();"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add</button> </div> <div class="box"> <h4>Any non-Recurring transactions?</h4> <ul class="list-unstyled"> <li ng-repeat="transaction in vm.nonRecurring" class="active-{{transaction.active}}"> <span><input type="checkbox" ng-model="transaction.active"></span> <input type="text" ng-model="transaction.name" placeholder="e.g. Bonus..." class="span3"> <input type="text" ng-model="transaction.amount" placeholder="Enter Amount" class="span1"> <select class="span2" ng-model="transaction.month" ng-options="vm.getMonthLabel(value) for value in [1,2,3,4,5,6,7,8,9,10,11,12]"> </select> <button class="btn btn-indented" ng-click="vm.removeTransaction($index);"><span class="glyphicon glyphicon-minus" aria-hidden="true"></span></button> </li> </ul> <button class="btn btn-indented" ng-click="vm.addTransaction();"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add</button> </div> <div class="store" ng-show="false"> <p> <button class="btn btn-success" ng-click="vm.saveProjector();"><i class="icon-hdd icon-white"></i> Save</button> <button class="btn btn-danger" ng-click="vm.clearProjector;"><i class="icon-trash icon-white"></i> Erase</button> </p> <p>Note:</p> </div> </div> <div class="col-md-5"> <table class="table table-striped"> <thead> <tr> <th colspan="2" class="number">Accumulated net income</th> <th class="number">Balance</th> </tr></thead> <tbody> <tr ng-repeat="change in vm.monthlyProjection() track by $index;"> <td>{{vm.getMonthLabel($index+1)}}</td> <td class="number">{{vm.roundDown(change)}}</td> <td class="number" ng-class="vm.positiveNegative(vm.convertToNumber(vm.startBalance) + change)"> {{vm.roundDown(vm.convertToNumber(vm.startBalance) + change)}}</td> </tr> </tbody> </table> <table class="table table-striped"> <thead> <tr> <th></th> <th class="number">Per month</th> <th class="number">Per year</th> </tr></thead> <tbody> <tr> <td>Income</td> <td class="number">{{vm.roundDown(vm.monthlyIncome())}}</td> <td class="number">{{vm.roundDown(vm.monthlyIncome()*12)}}</td> </tr> <tr> <td>Expenses</td> <td class="number">{{vm.roundDown(vm.monthlyExpense())}}</td> <td class="number">{{vm.roundDown(vm.monthlyExpense()*12)}}</td> </tr> <tr> <td>Non-Recurring</td> <td class="number"></td> <td class="number">{{vm.tallyTransactions()}}</td> </tr> <tr> <td><strong>Net income</strong></td> <td class="number" ng-class="vm.positiveNegative(vm.monthlyNet())"><strong>{{vm.roundDown(vm.monthlyNet())}}</strong></td> <td class="number" ng-class="vm.positiveNegative((vm.monthlyNet()*12)+vm.tallyTransactions())"><strong>{{vm.roundDown(vm.monthlyNet()*12)+vm.tallyTransactions()}}</strong></td> </tr> </tbody> </table> </div> </div> </div> </section>')}]);